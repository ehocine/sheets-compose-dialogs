{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sheets-Compose-Dialogs An Android library that offers dialogs & views for various use cases - build with Jetpack Compose. All of the dialogs & views are easy and quick to implement. Views can be used for PopUps, BottomSheets and other containers. # Get started The library contains various use-cases. Each module represents one use-case and contains a `*Dialog` and `*View`. You can use the `*Dialog` directly while you can use the `*View` for bottom sheets, popups and other non-scrollable containers. Play around with the samples via [APK](https://github.com/maxkeppeler/sheets-compose-dialogs/blob/main/app/sample.apk). In your top-level `build.gradle` repositories { ... mavenCentral() } In your app `build.gradle` file: dependencies { ... // Implementing the `core` module is mandatory for using other use cases. implementation 'com.maxkeppeler.sheets-compose-dialogs:core:<version>' implementation 'com.maxkeppeler.sheets-compose-dialogs:<module>:<version>' } Replace ` ` with the (latest or preferred) version of the library. Replace ` ` with the module you want to use. Modules: `core` | `info` | `color` | `calendar` | `rating` | `clock` | `duration` | `date-time` | `option` | `list` | `input` | `emoji` | `state` \ud83d\udcd6 Get a better insight into the API \u200f\u200f\u200e \u200e\u2023\u200f\u200f\u200e \u200e [API Documentation](https://maxkeppeler.github.io/sheets-compose-dialogs/api/) \u2728 General documentation, resources and more \u200f\u200f\u200e \u200e\u2023\u200f\u200f\u200e \u200e [Documentation](https://maxkeppeler.notion.site/sheets-compose-dialogs-804f0ebcb2c84b98b7afa5f687295aed) # Showcase Take a look at the use-cases presented as dialogs. These same use-cases can also be displayed within a popup, bottom sheet, or any other container view. Calendar Module calendar \u200e\u200e | \u200e\u200e API Documentation Light Dark CalendarSample1 CalendarSample1 CalendarSample2 CalendarSample2 CalendarSample3 CalendarSample3 CalendarSample4 CalendarSample4 CalendarSample5 CalendarSample5 Clock Module clock \u200e\u200e | \u200e\u200e API Documentation Light Dark ClockSample1 ClockSample1 ClockSample2 ClockSample2 Color Module color \u200e\u200e | \u200e\u200e API Documentation Light Dark ColorSample1 ColorSample1 ColorSample2 ColorSample2 ColorSample3 ColorSample3 Core Module core \u200e\u200e | \u200e\u200e API Documentation Light Dark CoreSample1 CoreSample1 Date-Time Module date-time \u200e\u200e | \u200e\u200e API Documentation Light Dark DateTimeSample1 DateTimeSample1 DateTimeSample2 DateTimeSample2 DateTimeSample3 DateTimeSample3 Duration Module duration \u200e\u200e | \u200e\u200e API Documentation Light Dark DurationSample1 DurationSample1 DurationSample2 DurationSample2 Emoji Module emoji \u200e\u200e | \u200e\u200e API Documentation Light Dark EmojiSample1 EmojiSample1 EmojiSample2 EmojiSample2 Info Module info \u200e\u200e | \u200e\u200e API Documentation Light Dark InfoSample1 InfoSample1 Input Module input \u200e\u200e | \u200e\u200e API Documentation Light Dark InputSample1 InputSample1 InputSample2 InputSample2 InputSample3 InputSample3 InputSample4 InputSample4 List Module list \u200e\u200e | \u200e\u200e API Documentation Light Dark ListSample1 ListSample1 ListSample2 ListSample2 ListSample3 ListSample3 ListSample4 ListSample4 Option Module option \u200e\u200e | \u200e\u200e API Documentation Light Dark OptionSample1 OptionSample1 OptionSample2 OptionSample2 OptionSample3 OptionSample3 Rating Module rating \u200e\u200e | \u200e\u200e API Documentation Light Dark RatingSample1 RatingSample1 RatingSample2 RatingSample2 RatingSample3 RatingSample3 RatingSample4 RatingSample4 State Module state \u200e\u200e | \u200e\u200e API Documentation Light Dark StateSample1 StateSample1 StateSample2 StateSample2 StateSample3 StateSample3 StateSample4 StateSample4 StateSample5 StateSample5 StateSample6 StateSample6 StateSample7 StateSample7 ## Donate Show your appreciation by donating me a coffee. Thank you very much! ## Showcase Check out some apps which are using this library. - [Elcovia - Notion Templates & Resources](https://play.google.com/store/apps/details?id=com.elcovia.android) - [WearSocials](https://play.google.com/store/apps/details?id=com.mk.wearsocials) - [Respawn](https://play.google.com/store/apps/details?id=com.nek12.respawn) - [Mangata (Soon)](http://mangata-mk.com) ## License Copyright 2022-2023 Maximilian Keppeler https://maxkeppeler.com Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Home"},{"location":"#sheets-compose-dialogs","text":"An Android library that offers dialogs & views for various use cases - build with Jetpack Compose. All of the dialogs & views are easy and quick to implement. Views can be used for PopUps, BottomSheets and other containers. # Get started The library contains various use-cases. Each module represents one use-case and contains a `*Dialog` and `*View`. You can use the `*Dialog` directly while you can use the `*View` for bottom sheets, popups and other non-scrollable containers. Play around with the samples via [APK](https://github.com/maxkeppeler/sheets-compose-dialogs/blob/main/app/sample.apk). In your top-level `build.gradle` repositories { ... mavenCentral() } In your app `build.gradle` file: dependencies { ... // Implementing the `core` module is mandatory for using other use cases. implementation 'com.maxkeppeler.sheets-compose-dialogs:core:<version>' implementation 'com.maxkeppeler.sheets-compose-dialogs:<module>:<version>' } Replace ` ` with the (latest or preferred) version of the library. Replace ` ` with the module you want to use. Modules: `core` | `info` | `color` | `calendar` | `rating` | `clock` | `duration` | `date-time` | `option` | `list` | `input` | `emoji` | `state` \ud83d\udcd6 Get a better insight into the API \u200f\u200f\u200e \u200e\u2023\u200f\u200f\u200e \u200e [API Documentation](https://maxkeppeler.github.io/sheets-compose-dialogs/api/) \u2728 General documentation, resources and more \u200f\u200f\u200e \u200e\u2023\u200f\u200f\u200e \u200e [Documentation](https://maxkeppeler.notion.site/sheets-compose-dialogs-804f0ebcb2c84b98b7afa5f687295aed) # Showcase Take a look at the use-cases presented as dialogs. These same use-cases can also be displayed within a popup, bottom sheet, or any other container view.","title":"Sheets-Compose-Dialogs"}]}